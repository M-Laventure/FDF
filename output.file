==57543== Memcheck, a memory error detector
==57543== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==57543== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==57543== Command: ./fdf maps_fdf/maps/42.fdf
==57543== Parent PID: 56701
==57543== 
--57543-- run: /usr/bin/dsymutil "./fdf"
--57543-- UNKNOWN mach_msg unhandled MACH_SEND_TRAILER option
--57543-- UNKNOWN mach_msg unhandled MACH_SEND_TRAILER option (repeated 2 times)
--57543-- UNKNOWN mach_msg unhandled MACH_SEND_TRAILER option (repeated 4 times)
--57543-- UNKNOWN mach_msg unhandled MACH_SEND_TRAILER option (repeated 8 times)
==57543== Thread 2:
==57543== Invalid read of size 4
==57543==    at 0x105C142B1: ??? (in /usr/lib/system/libsystem_pthread.dylib)
==57543==    by 0x105C1407C: ??? (in /usr/lib/system/libsystem_pthread.dylib)
==57543==  Address 0x18 is not stack'd, malloc'd or (recently) free'd
==57543== 
==57543== 
==57543== Process terminating with default action of signal 11 (SIGSEGV)
==57543==  Access not within mapped region at address 0x18
==57543==    at 0x105C142B1: ??? (in /usr/lib/system/libsystem_pthread.dylib)
==57543==    by 0x105C1407C: ??? (in /usr/lib/system/libsystem_pthread.dylib)
==57543==  If you believe this happened as a result of a stack
==57543==  overflow in your program's main thread (unlikely but
==57543==  possible), you can try to increase the size of the
==57543==  main thread stack using the --main-stacksize= flag.
==57543==  The main thread stack size used in this run was 8388608.
==57543== 
==57543== HEAP SUMMARY:
==57543==     in use at exit: 0 bytes in 0 blocks
==57543==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==57543== 
==57543== All heap blocks were freed -- no leaks are possible
==57543== 
==57543== For counts of detected and suppressed errors, rerun with: -v
==57543== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 19 from 4)
